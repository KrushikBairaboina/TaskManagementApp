{"ast":null,"code":"var _jsxFileName = \"/home/krushik/projects/EmployeeManagementApp/frontend/src/Components/TaskManagementApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TaskTable from './TaskTable';\nimport AddTask from './AddTask';\nimport { GetAllTasks } from '../api';\nimport { ToastContainer } from 'react-toastify';\nimport { notify } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManagementApp = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [taskObj, setTaskObj] = useState(null);\n  const [tasksData, setTasksData] = useState({\n    tasks: [],\n    pagination: {\n      currentPage: 1,\n      pageSize: 10,\n      // Total tasks per page (5 Pending + 5 Completed)\n      totalTasks: 0,\n      totalPages: 0\n    }\n  });\n  const fetchTasks = async (search = '', page = 1, limit = 10) => {\n    console.log('Called fetchTasks');\n    try {\n      const data = await GetAllTasks(search, page, limit);\n      console.log(data);\n      setTasksData(data);\n    } catch (err) {\n      notify('Error fetching tasks', 'error'); // Display error message using toast\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchTasks(); // Fetch tasks when the component mounts\n  }, []);\n  const handleSearch = e => {\n    fetchTasks(e.target.value); // Search tasks based on input\n  };\n  const handleUpdateTask = async task => {\n    setTaskObj(task);\n    setShowModal(true);\n  };\n\n  // Separate tasks into Pending and Completed\n  const pendingTasks = tasksData.tasks.filter(task => task.status === 'Pending');\n  const completedTasks = tasksData.tasks.filter(task => task.status === 'Completed');\n\n  // Ensure we only show 5 tasks for each category\n  const pendingTasksToDisplay = pendingTasks.slice(0, 5);\n  const completedTasksToDisplay = completedTasks.slice(0, 5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column justify-content-center align-items-center w-100 p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-80 border bg-light p-3\",\n        style: {\n          width: '80%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => setShowModal(true),\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleSearch,\n            type: \"text\",\n            placeholder: \"Search Tasks...\",\n            className: \"form-control w-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pending Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n          tasks: pendingTasksToDisplay,\n          pagination: tasksData.pagination,\n          fetchTasks: fetchTasks,\n          handleUpdateTask: handleUpdateTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n          tasks: completedTasksToDisplay,\n          pagination: tasksData.pagination,\n          fetchTasks: fetchTasks,\n          handleUpdateTask: handleUpdateTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n          fetchTasks: fetchTasks,\n          showModal: showModal,\n          setShowModal: setShowModal,\n          taskObj: taskObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManagementApp, \"08zsCdt41O7G30KzPrGx4q5gLHU=\");\n_c = TaskManagementApp;\nexport default TaskManagementApp;\nvar _c;\n$RefreshReg$(_c, \"TaskManagementApp\");","map":{"version":3,"names":["React","useEffect","useState","TaskTable","AddTask","GetAllTasks","ToastContainer","notify","jsxDEV","_jsxDEV","TaskManagementApp","_s","showModal","setShowModal","taskObj","setTaskObj","tasksData","setTasksData","tasks","pagination","currentPage","pageSize","totalTasks","totalPages","fetchTasks","search","page","limit","console","log","data","err","error","handleSearch","e","target","value","handleUpdateTask","task","pendingTasks","filter","status","completedTasks","pendingTasksToDisplay","slice","completedTasksToDisplay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","onClick","onChange","type","placeholder","position","autoClose","hideProgressBar","_c","$RefreshReg$"],"sources":["/home/krushik/projects/EmployeeManagementApp/frontend/src/Components/TaskManagementApp.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TaskTable from './TaskTable';  \nimport AddTask from './AddTask';  \nimport { GetAllTasks } from '../api';  \nimport { ToastContainer } from 'react-toastify';\nimport { notify } from '../utils';\n\nconst TaskManagementApp = () => {\n    const [showModal, setShowModal] = useState(false);\n    const [taskObj, setTaskObj] = useState(null);  \n    const [tasksData, setTasksData] = useState({\n        tasks: [],  \n        pagination: {\n            currentPage: 1,\n            pageSize: 10,  // Total tasks per page (5 Pending + 5 Completed)\n            totalTasks: 0,\n            totalPages: 0,\n        },\n    });\n\n    const fetchTasks = async (search = '', page = 1, limit = 10) => {\n        console.log('Called fetchTasks');\n        try {\n            const data = await GetAllTasks(search, page, limit);  \n            console.log(data);\n            setTasksData(data);\n        } catch (err) {\n            notify('Error fetching tasks', 'error'); // Display error message using toast\n            console.error(err);\n        }\n    };\n\n    useEffect(() => {\n        fetchTasks();  // Fetch tasks when the component mounts\n    }, []);\n\n    const handleSearch = (e) => {\n        fetchTasks(e.target.value);  // Search tasks based on input\n    };\n\n    const handleUpdateTask = async (task) => {\n        setTaskObj(task);\n        setShowModal(true);\n    };\n\n    // Separate tasks into Pending and Completed\n    const pendingTasks = tasksData.tasks.filter(task => task.status === 'Pending');\n    const completedTasks = tasksData.tasks.filter(task => task.status === 'Completed');\n\n    // Ensure we only show 5 tasks for each category\n    const pendingTasksToDisplay = pendingTasks.slice(0, 5);\n    const completedTasksToDisplay = completedTasks.slice(0, 5);\n\n    return (\n        <div className='d-flex flex-column justify-content-center align-items-center w-100 p-3'>\n            <h1>Task Management App</h1>\n            <div className='w-100 d-flex justify-content-center'>\n                <div className='w-80 border bg-light p-3' style={{ width: '80%' }}>\n                    <div className='d-flex justify-content-between mb-3'>\n                        <button className='btn btn-primary' onClick={() => setShowModal(true)}>\n                            Add Task\n                        </button>\n                        <input\n                            onChange={handleSearch}\n                            type='text'\n                            placeholder='Search Tasks...'\n                            className='form-control w-50'\n                        />\n                    </div>\n\n                    {/* Display Pending Tasks */}\n                    <h3>Pending Tasks</h3>\n                    <TaskTable\n                        tasks={pendingTasksToDisplay}  \n                        pagination={tasksData.pagination}\n                        fetchTasks={fetchTasks}  \n                        handleUpdateTask={handleUpdateTask}  \n                    />\n\n                    {/* Display Completed Tasks */}\n                    <h3>Completed Tasks</h3>\n                    <TaskTable\n                        tasks={completedTasksToDisplay}  \n                        pagination={tasksData.pagination}\n                        fetchTasks={fetchTasks}  \n                        handleUpdateTask={handleUpdateTask}  \n                    />\n\n                    <AddTask\n                        fetchTasks={fetchTasks}  \n                        showModal={showModal}\n                        setShowModal={setShowModal}\n                        taskObj={taskObj}  \n                    />\n                </div>\n            </div>\n            <ToastContainer position='top-right' autoClose={3000} hideProgressBar={false} />\n        </div>\n    );\n};\n\nexport default TaskManagementApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}