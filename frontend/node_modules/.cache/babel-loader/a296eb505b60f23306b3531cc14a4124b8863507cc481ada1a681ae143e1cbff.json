{"ast":null,"code":"const BASE_URL = 'http://localhost:8080';\n\n// Get all tasks with optional search, pagination (page, limit), and status filter\n\n// Get task details by task ID\nexport const GetTaskDetailsById = async id => {\n  const url = `${BASE_URL}/api/tasks/${id}`;\n  const options = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const result = await fetch(url, options);\n    if (!result.ok) {\n      throw new Error('Failed to fetch task details');\n    }\n    const {\n      data\n    } = await result.json();\n    return data;\n  } catch (err) {\n    console.error('Error fetching task details:', err);\n    return {\n      error: 'Error fetching task details'\n    }; // Return error message\n  }\n};\n\n// Delete task by task ID\n_c = GetTaskDetailsById;\nexport const DeleteTaskById = async id => {\n  const url = `${BASE_URL}/api/tasks/${id}`;\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const result = await fetch(url, options);\n    if (!result.ok) {\n      throw new Error('Failed to delete task');\n    }\n    const data = await result.json();\n    return data;\n  } catch (err) {\n    console.error('Error deleting task:', err);\n    return {\n      error: 'Error deleting task'\n    }; // Return error message\n  }\n};\n\n// Create a new task\n_c2 = DeleteTaskById;\nexport const CreateTask = async taskObj => {\n  const url = `${BASE_URL}/api/tasks`;\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(taskObj)\n  };\n  try {\n    const result = await fetch(url, options);\n    if (!result.ok) {\n      throw new Error('Failed to create task');\n    }\n    const data = await result.json();\n    return data;\n  } catch (err) {\n    console.error('Error creating task:', err);\n    return {\n      error: 'Error creating task'\n    }; // Return error message\n  }\n};\n\n// Update task by task ID\n_c3 = CreateTask;\nexport const UpdateTaskById = async (taskObj, id) => {\n  const url = `${BASE_URL}/api/tasks/${id}`;\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(taskObj)\n  };\n  try {\n    const result = await fetch(url, options);\n    if (!result.ok) {\n      throw new Error('Failed to update task');\n    }\n    const data = await result.json();\n    return data;\n  } catch (err) {\n    console.error('Error updating task:', err);\n    return {\n      error: 'Error updating task'\n    }; // Return error message\n  }\n};\n_c4 = UpdateTaskById;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GetTaskDetailsById\");\n$RefreshReg$(_c2, \"DeleteTaskById\");\n$RefreshReg$(_c3, \"CreateTask\");\n$RefreshReg$(_c4, \"UpdateTaskById\");","map":{"version":3,"names":["BASE_URL","GetTaskDetailsById","id","url","options","method","headers","result","fetch","ok","Error","data","json","err","console","error","_c","DeleteTaskById","_c2","CreateTask","taskObj","body","JSON","stringify","_c3","UpdateTaskById","_c4","$RefreshReg$"],"sources":["/home/krushik/projects/EmployeeManagementApp/frontend/src/api.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8080';\n\n// Get all tasks with optional search, pagination (page, limit), and status filter\n\n\n// Get task details by task ID\nexport const GetTaskDetailsById = async (id) => {\n    const url = `${BASE_URL}/api/tasks/${id}`;\n    const options = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    try {\n        const result = await fetch(url, options);\n        if (!result.ok) {\n            throw new Error('Failed to fetch task details');\n        }\n        const { data } = await result.json();\n        return data;\n    } catch (err) {\n        console.error('Error fetching task details:', err);\n        return { error: 'Error fetching task details' }; // Return error message\n    }\n};\n\n// Delete task by task ID\nexport const DeleteTaskById = async (id) => {\n    const url = `${BASE_URL}/api/tasks/${id}`;\n    const options = {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    try {\n        const result = await fetch(url, options);\n        if (!result.ok) {\n            throw new Error('Failed to delete task');\n        }\n        const data = await result.json();\n        return data;\n    } catch (err) {\n        console.error('Error deleting task:', err);\n        return { error: 'Error deleting task' }; // Return error message\n    }\n};\n\n// Create a new task\nexport const CreateTask = async (taskObj) => {\n    const url = `${BASE_URL}/api/tasks`;\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(taskObj)\n    };\n    try {\n        const result = await fetch(url, options);\n        if (!result.ok) {\n            throw new Error('Failed to create task');\n        }\n        const data = await result.json();\n        return data;\n    } catch (err) {\n        console.error('Error creating task:', err);\n        return { error: 'Error creating task' }; // Return error message\n    }\n};\n\n// Update task by task ID\nexport const UpdateTaskById = async (taskObj, id) => {\n    const url = `${BASE_URL}/api/tasks/${id}`;\n    const options = {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(taskObj)\n    };\n    try {\n        const result = await fetch(url, options);\n        if (!result.ok) {\n            throw new Error('Failed to update task');\n        }\n        const data = await result.json();\n        return data;\n    } catch (err) {\n        console.error('Error updating task:', err);\n        return { error: 'Error updating task' }; // Return error message\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}