{"ast":null,"code":"var _jsxFileName = \"/home/krushik/projects/EmployeeManagementApp/frontend/src/Components/CompletedTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TaskTable from './TaskTable';\nimport { GetAllTasks } from '../api';\nimport { notify } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompletedTasks = ({\n  fetchTasks,\n  pagination,\n  handleUpdateTask\n}) => {\n  _s();\n  const [completedTasks, setCompletedTasks] = useState([]);\n  useEffect(() => {\n    const fetchCompletedTasks = async () => {\n      try {\n        const data = await GetAllTasks('', pagination.currentPage, 5); // Fetch 5 tasks per page\n        const completed = data.tasks.filter(task => task.status === 'Completed');\n        setCompletedTasks(completed);\n      } catch (err) {\n        notify('Error fetching completed tasks', 'error');\n        console.error(err);\n      }\n    };\n    fetchCompletedTasks();\n  }, [pagination.currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Completed Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n      tasks: completedTasks,\n      pagination: pagination,\n      fetchTasks: fetchTasks,\n      handleUpdateTask: handleUpdateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(CompletedTasks, \"X+vY569YsXOYAguUXG5hWO81OnE=\");\n_c = CompletedTasks;\nexport default CompletedTasks;\nvar _c;\n$RefreshReg$(_c, \"CompletedTasks\");","map":{"version":3,"names":["React","useEffect","useState","TaskTable","GetAllTasks","notify","jsxDEV","_jsxDEV","CompletedTasks","fetchTasks","pagination","handleUpdateTask","_s","completedTasks","setCompletedTasks","fetchCompletedTasks","data","currentPage","completed","tasks","filter","task","status","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/krushik/projects/EmployeeManagementApp/frontend/src/Components/CompletedTasks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TaskTable from './TaskTable';\nimport { GetAllTasks } from '../api';\nimport { notify } from '../utils';\n\nconst CompletedTasks = ({ fetchTasks, pagination, handleUpdateTask }) => {\n    const [completedTasks, setCompletedTasks] = useState([]);\n\n    useEffect(() => {\n        const fetchCompletedTasks = async () => {\n            try {\n                const data = await GetAllTasks('', pagination.currentPage, 5); // Fetch 5 tasks per page\n                const completed = data.tasks.filter(task => task.status === 'Completed');\n                setCompletedTasks(completed);\n            } catch (err) {\n                notify('Error fetching completed tasks', 'error');\n                console.error(err);\n            }\n        };\n\n        fetchCompletedTasks();\n    }, [pagination.currentPage]);\n\n    return (\n        <div>\n            <h3>Completed Tasks</h3>\n            <TaskTable\n                tasks={completedTasks}\n                pagination={pagination}\n                fetchTasks={fetchTasks}\n                handleUpdateTask={handleUpdateTask}\n            />\n        </div>\n    );\n};\n\nexport default CompletedTasks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,QAAQ;AACpC,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZ,MAAMc,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMZ,WAAW,CAAC,EAAE,EAAEM,UAAU,CAACO,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/D,MAAMC,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,WAAW,CAAC;QACxER,iBAAiB,CAACI,SAAS,CAAC;MAChC,CAAC,CAAC,OAAOK,GAAG,EAAE;QACVlB,MAAM,CAAC,gCAAgC,EAAE,OAAO,CAAC;QACjDmB,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACtB;IACJ,CAAC;IAEDR,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACL,UAAU,CAACO,WAAW,CAAC,CAAC;EAE5B,oBACIV,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA,CAACJ,SAAS;MACNgB,KAAK,EAAEN,cAAe;MACtBH,UAAU,EAAEA,UAAW;MACvBD,UAAU,EAAEA,UAAW;MACvBE,gBAAgB,EAAEA;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAClB,EAAA,CA7BIJ,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}