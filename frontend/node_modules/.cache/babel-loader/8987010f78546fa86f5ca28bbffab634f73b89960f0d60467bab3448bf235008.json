{"ast":null,"code":"var _jsxFileName = \"/home/krushik/projects/EmployeeManagementApp/frontend/src/Components/TaskManagementApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TaskTable from './TaskTable';\nimport AddTask from './AddTask';\nimport { GetAllTasks } from '../api';\nimport { ToastContainer } from 'react-toastify';\nimport { notify } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManagementApp = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [taskObj, setTaskObj] = useState(null);\n  const [tasksData, setTasksData] = useState({\n    tasks: [],\n    pagination: {\n      currentPage: 1,\n      pageSize: 5,\n      totalTasks: 0,\n      totalPages: 0\n    }\n  });\n  const fetchTasks = async (search = '', page = 1, limit = 5) => {\n    console.log('Called fetchTasks');\n    try {\n      const data = await GetAllTasks(search, page, limit);\n      console.log(data);\n      const {\n        tasks,\n        pagination\n      } = data;\n\n      // Separate tasks into Pending and Completed\n      const pendingTasks = tasks.filter(task => task.status === 'Pending');\n      const completedTasks = tasks.filter(task => task.status === 'Completed');\n\n      // Ensure each page has 5 pending and 5 completed tasks\n      const tasksPerPage = 5;\n      const combinedTasks = [];\n      const startPending = (page - 1) * tasksPerPage;\n      const startCompleted = (page - 1) * tasksPerPage;\n      const pagePendingTasks = pendingTasks.slice(startPending, startPending + tasksPerPage);\n      const pageCompletedTasks = completedTasks.slice(startCompleted, startCompleted + tasksPerPage);\n      combinedTasks.push(...pagePendingTasks, ...pageCompletedTasks);\n      setTasksData({\n        tasks: combinedTasks,\n        pagination\n      });\n    } catch (err) {\n      notify('Error fetching tasks', 'error'); // Display error message using toast\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchTasks(); // Fetch tasks when the component mounts\n  }, []);\n  const handleSearch = e => {\n    fetchTasks(e.target.value);\n  };\n  const handleUpdateTask = async task => {\n    setTaskObj(task);\n    setShowModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column justify-content-center align-items-center w-100 p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-80 border bg-light p-3\",\n        style: {\n          width: '80%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => setShowModal(true),\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleSearch,\n            type: \"text\",\n            placeholder: \"Search Tasks...\",\n            className: \"form-control w-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n          fetchTasks: fetchTasks,\n          handleUpdateTask: handleUpdateTask,\n          tasksData: tasksData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n          fetchTasks: fetchTasks,\n          showModal: showModal,\n          setShowModal: setShowModal,\n          taskObj: taskObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManagementApp, \"T3OCQkECLf3PNSIwGbIh5jy52lM=\");\n_c = TaskManagementApp;\nexport default TaskManagementApp;\nvar _c;\n$RefreshReg$(_c, \"TaskManagementApp\");","map":{"version":3,"names":["React","useEffect","useState","TaskTable","AddTask","GetAllTasks","ToastContainer","notify","jsxDEV","_jsxDEV","TaskManagementApp","_s","showModal","setShowModal","taskObj","setTaskObj","tasksData","setTasksData","tasks","pagination","currentPage","pageSize","totalTasks","totalPages","fetchTasks","search","page","limit","console","log","data","pendingTasks","filter","task","status","completedTasks","tasksPerPage","combinedTasks","startPending","startCompleted","pagePendingTasks","slice","pageCompletedTasks","push","err","error","handleSearch","e","target","value","handleUpdateTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","onClick","onChange","type","placeholder","position","autoClose","hideProgressBar","_c","$RefreshReg$"],"sources":["/home/krushik/projects/EmployeeManagementApp/frontend/src/Components/TaskManagementApp.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TaskTable from './TaskTable';\nimport AddTask from './AddTask';\nimport { GetAllTasks } from '../api';\nimport { ToastContainer } from 'react-toastify';\nimport { notify } from '../utils';\n\nconst TaskManagementApp = () => {\n    const [showModal, setShowModal] = useState(false);\n    const [taskObj, setTaskObj] = useState(null);\n    const [tasksData, setTasksData] = useState({\n        tasks: [],\n        pagination: {\n            currentPage: 1,\n            pageSize: 5,\n            totalTasks: 0,\n            totalPages: 0,\n        },\n    });\n\n    const fetchTasks = async (search = '', page = 1, limit = 5) => {\n        console.log('Called fetchTasks');\n        try {\n            const data = await GetAllTasks(search, page, limit);  \n            console.log(data);\n            const { tasks, pagination } = data;\n\n            // Separate tasks into Pending and Completed\n            const pendingTasks = tasks.filter(task => task.status === 'Pending');\n            const completedTasks = tasks.filter(task => task.status === 'Completed');\n            \n            // Ensure each page has 5 pending and 5 completed tasks\n            const tasksPerPage = 5;\n            const combinedTasks = [];\n\n            const startPending = (page - 1) * tasksPerPage;\n            const startCompleted = (page - 1) * tasksPerPage;\n\n            const pagePendingTasks = pendingTasks.slice(startPending, startPending + tasksPerPage);\n            const pageCompletedTasks = completedTasks.slice(startCompleted, startCompleted + tasksPerPage);\n\n            combinedTasks.push(...pagePendingTasks, ...pageCompletedTasks);\n\n            setTasksData({\n                tasks: combinedTasks,\n                pagination,\n            });\n        } catch (err) {\n            notify('Error fetching tasks', 'error'); // Display error message using toast\n            console.error(err);\n        }\n    };\n\n    useEffect(() => {\n        fetchTasks();  // Fetch tasks when the component mounts\n    }, []);\n\n    const handleSearch = (e) => {\n        fetchTasks(e.target.value);\n    };\n\n    const handleUpdateTask = async (task) => {\n        setTaskObj(task);\n        setShowModal(true);\n    };\n\n    return (\n        <div className='d-flex flex-column justify-content-center align-items-center w-100 p-3'>\n            <h1>Task Management App</h1>\n            <div className='w-100 d-flex justify-content-center'>\n                <div className='w-80 border bg-light p-3' style={{ width: '80%' }}>\n                    <div className='d-flex justify-content-between mb-3'>\n                        <button className='btn btn-primary' onClick={() => setShowModal(true)}>\n                            Add Task\n                        </button>\n                        <input\n                            onChange={handleSearch}\n                            type='text'\n                            placeholder='Search Tasks...'\n                            className='form-control w-50'\n                        />\n                    </div>\n\n                    {/* Display Tasks Table */}\n                    <TaskTable\n                        fetchTasks={fetchTasks}\n                        handleUpdateTask={handleUpdateTask}\n                        tasksData={tasksData}\n                    />\n\n                    <AddTask\n                        fetchTasks={fetchTasks}  \n                        showModal={showModal}\n                        setShowModal={setShowModal}\n                        taskObj={taskObj}  \n                    />\n                </div>\n            </div>\n            <ToastContainer position='top-right' autoClose={3000} hideProgressBar={false} />\n        </div>\n    );\n};\n\nexport default TaskManagementApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}